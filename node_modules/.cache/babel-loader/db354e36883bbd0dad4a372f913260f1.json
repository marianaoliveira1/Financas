{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documents/Financas/src/components/Hooks/TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext([]);\nexport function TransactionsProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: transactions,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/home/mariana/Documents/Financas/src/components/Hooks/TransactionsContext.tsx"],"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,oBAApB;;AAeA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAAgB,EAAhB,CAAzC;AAEP,OAAO,SAASK,oBAAT,OAAwE;AAAA;;AAAA,MAA1C;AAAEC,IAAAA;AAAF,GAA0C;AAC3E,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAgB,EAAhB,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,GAAG,CAACM,GAAJ,CAAQ,cAAR,EACCC,IADD,CACMC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADjC;AAEH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACA,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEA,YAArC;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAKH;;GAbeD,oB;;KAAAA,oB","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { api } from \"../../services/api\";\n\ninterface Transaction {\n    id: number;\n    title: string;\n    amount: number;\n    type: string;\n    category: string;\n    createdAt: string;\n}\n\ninterface TransactionsProviderProps {\n    children: ReactNode;\n}\n\nexport const TransactionsContext = createContext<Transaction[]>([]);\n\nexport function TransactionsProvider({ children } : TransactionsProviderProps) {\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n    useEffect(() => {\n        api.get('transactions')\n        .then(response => setTransactions(response.data.transactions))\n    }, []);\n\n    return (\n    <TransactionsContext.Provider value={transactions}>\n        {children}\n    </TransactionsContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}