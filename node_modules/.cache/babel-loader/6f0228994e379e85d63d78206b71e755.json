{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documents/Financas/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Dashboard } from \"./components/Dashboard\";\nimport Modal from 'react-modal';\nimport { Header } from \"./components/Header\";\nimport { GlobalStyle } from \"./styles/global\";\nimport { useState } from \"react\";\nimport { NewTransaction } from \"./components/NewTransactionModal\";\nimport { TransactionsProvider } from \"./components/Hooks/TransactionsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nexport function App() {\n  _s();\n\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function hanleOpenNewTransactionModal() {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function hanleCloseNewTransactionModal() {\n    setIsNewTransactionModalOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onOpenNewTransactionModal: hanleOpenNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTransaction, {\n      isOpen: isNewTransactionModalOpen,\n      onRequestClose: hanleCloseNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YWa5Wmz82gI4ha22AwMdN+zJHN8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mariana/Documents/Financas/src/App.tsx"],"names":["Dashboard","Modal","Header","GlobalStyle","useState","NewTransaction","TransactionsProvider","setAppElement","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","hanleOpenNewTransactionModal","hanleCloseNewTransactionModal"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,oBAAT,QAAqC,wCAArC;;AAEAL,KAAK,CAACM,aAAN,CAAoB,OAApB;AAEA,OAAO,SAASC,GAAT,GAAe;AAAA;;AAEpB,QAAM,CAACC,yBAAD,EAA4BC,4BAA5B,IAA4DN,QAAQ,CAAC,KAAD,CAA1E;;AAEA,WAASO,4BAAT,GAAwC;AACpCD,IAAAA,4BAA4B,CAAC,IAAD,CAA5B;AACH;;AAED,WAASE,6BAAT,GAAyC;AACrCF,IAAAA,4BAA4B,CAAC,KAAD,CAA5B;AACH;;AAED,sBACE,QAAC,oBAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,yBAAyB,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEF,yBAAxB;AAAmD,MAAA,cAAc,EAAEG;AAAnE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GArBeJ,G;;KAAAA,G","sourcesContent":["import { Dashboard } from \"./components/Dashboard\";\nimport Modal from 'react-modal';\nimport { Header } from \"./components/Header\";\nimport { GlobalStyle } from \"./styles/global\";\nimport { useState } from \"react\";\nimport { NewTransaction } from \"./components/NewTransactionModal\";\nimport { TransactionsProvider } from \"./components/Hooks/TransactionsContext\";\n\nModal.setAppElement('#root');\n\nexport function App() {\n  \n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function hanleOpenNewTransactionModal() {\n      setIsNewTransactionModalOpen(true);\n  }\n\n  function hanleCloseNewTransactionModal() {\n      setIsNewTransactionModalOpen(false);\n  }\n\n  return (\n    <TransactionsProvider>\n      <Header onOpenNewTransactionModal={hanleOpenNewTransactionModal} />\n      <Dashboard />\n      <NewTransaction isOpen={isNewTransactionModalOpen} onRequestClose={hanleCloseNewTransactionModal} />\n      <GlobalStyle />\n    </TransactionsProvider>\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}